{
  "service": {
    "service": "mattw-reinvent2017-liveblogger",
    "serviceObject": {
      "name": "mattw-reinvent2017-liveblogger"
    },
    "provider": {
      "stage": "dev",
      "region": "us-east-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "nodejs6.10",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "s3:*"
          ],
          "Resource": [
            "arn:aws:s3:::mattw-reinvent17-liveblogger-src/*",
            "arn:aws:s3:::mattw-reinvent2017-rawsitepages/*"
          ]
        },
        {
          "Effect": "Allow",
          "Action": [
            "states:StartExecution"
          ],
          "Resource": [
            {
              "Ref": "LiveBloggerStateMachine"
            }
          ]
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:GetItem"
          ],
          "Resource": [
            "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/liveblogger",
            "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/livebloggercurrent"
          ]
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:PutItem"
          ],
          "Resource": [
            "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/livebloggercurrent"
          ]
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          },
          "UploadToS3LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/mattw-reinvent2017-liveblogger-dev-uploadToS3"
            }
          },
          "StartStepFunctionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/mattw-reinvent2017-liveblogger-dev-startStepFunction"
            }
          },
          "WhichSlideLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/mattw-reinvent2017-liveblogger-dev-whichSlide"
            }
          },
          "IsThisANewSlideLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/mattw-reinvent2017-liveblogger-dev-isThisANewSlide"
            }
          },
          "PullSlideDataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/mattw-reinvent2017-liveblogger-dev-pullSlideData"
            }
          },
          "CreateDocumentLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/mattw-reinvent2017-liveblogger-dev-createDocument"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "mattw-reinvent2017-liveblogger",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mattw-reinvent2017-liveblogger-dev-uploadToS3:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mattw-reinvent2017-liveblogger-dev-startStepFunction:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mattw-reinvent2017-liveblogger-dev-whichSlide:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mattw-reinvent2017-liveblogger-dev-isThisANewSlide:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mattw-reinvent2017-liveblogger-dev-pullSlideData:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mattw-reinvent2017-liveblogger-dev-createDocument:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mattw-reinvent2017-liveblogger-dev-uploadToS3:*:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mattw-reinvent2017-liveblogger-dev-startStepFunction:*:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mattw-reinvent2017-liveblogger-dev-whichSlide:*:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mattw-reinvent2017-liveblogger-dev-isThisANewSlide:*:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mattw-reinvent2017-liveblogger-dev-pullSlideData:*:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mattw-reinvent2017-liveblogger-dev-createDocument:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:*"
                        ],
                        "Resource": [
                          "arn:aws:s3:::mattw-reinvent17-liveblogger-src/*",
                          "arn:aws:s3:::mattw-reinvent2017-rawsitepages/*"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "states:StartExecution"
                        ],
                        "Resource": [
                          {
                            "Ref": "LiveBloggerStateMachine"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetItem"
                        ],
                        "Resource": [
                          "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/liveblogger",
                          "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/livebloggercurrent"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem"
                        ],
                        "Resource": [
                          "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/livebloggercurrent"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "mattw-reinvent2017-liveblogger",
                    "dev",
                    "us-east-1",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "UploadToS3LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/mattw-reinvent2017-liveblogger/dev/1511980245402-2017-11-29T18:30:45.402Z/mattw-reinvent2017-liveblogger.zip"
              },
              "FunctionName": "mattw-reinvent2017-liveblogger-dev-uploadToS3",
              "Handler": "handler.uploadToS3",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs6.10",
              "Timeout": 6,
              "Tags": [
                {
                  "Key": "demo",
                  "Value": "liveblogger"
                },
                {
                  "Key": "demorole",
                  "Value": "uploadToS3"
                }
              ],
              "Environment": {
                "Variables": {
                  "s3srcbucket": "mattw-reinvent17-liveblogger-src"
                }
              }
            },
            "DependsOn": [
              "UploadToS3LogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "UploadToS3LambdaVersionSFd2Baz7sLh1p6uwQk3yZXuNQieLXz0eA5mmP5o": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UploadToS3LambdaFunction"
              },
              "CodeSha256": "S+Fd2Baz7sLh1p6uwQk3yZXuN/+Q/ieLXz0eA5mmP5o="
            }
          },
          "StartStepFunctionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/mattw-reinvent2017-liveblogger/dev/1511980245402-2017-11-29T18:30:45.402Z/mattw-reinvent2017-liveblogger.zip"
              },
              "FunctionName": "mattw-reinvent2017-liveblogger-dev-startStepFunction",
              "Handler": "handler.startStepFunction",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs6.10",
              "Timeout": 6,
              "Tags": [
                {
                  "Key": "demo",
                  "Value": "liveblogger"
                },
                {
                  "Key": "demorole",
                  "Value": "startStepFunction"
                }
              ],
              "Environment": {
                "Variables": {
                  "statemachine_arn": {
                    "Ref": "LiveBloggerStateMachine"
                  }
                }
              }
            },
            "DependsOn": [
              "StartStepFunctionLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "StartStepFunctionLambdaVersionSFd2Baz7sLh1p6uwQk3yZXuNQieLXz0eA5mmP5o": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "StartStepFunctionLambdaFunction"
              },
              "CodeSha256": "S+Fd2Baz7sLh1p6uwQk3yZXuN/+Q/ieLXz0eA5mmP5o="
            }
          },
          "WhichSlideLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/mattw-reinvent2017-liveblogger/dev/1511980245402-2017-11-29T18:30:45.402Z/mattw-reinvent2017-liveblogger.zip"
              },
              "FunctionName": "mattw-reinvent2017-liveblogger-dev-whichSlide",
              "Handler": "handler.whichSlide",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs6.10",
              "Timeout": 6,
              "Tags": [
                {
                  "Key": "demo",
                  "Value": "liveblogger"
                },
                {
                  "Key": "demorole",
                  "Value": "whichSlide"
                }
              ]
            },
            "DependsOn": [
              "WhichSlideLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "WhichSlideLambdaVersionSFd2Baz7sLh1p6uwQk3yZXuNQieLXz0eA5mmP5o": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WhichSlideLambdaFunction"
              },
              "CodeSha256": "S+Fd2Baz7sLh1p6uwQk3yZXuN/+Q/ieLXz0eA5mmP5o="
            }
          },
          "IsThisANewSlideLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/mattw-reinvent2017-liveblogger/dev/1511980245402-2017-11-29T18:30:45.402Z/mattw-reinvent2017-liveblogger.zip"
              },
              "FunctionName": "mattw-reinvent2017-liveblogger-dev-isThisANewSlide",
              "Handler": "handler.isThisANewSlide",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs6.10",
              "Timeout": 6,
              "Tags": [
                {
                  "Key": "demo",
                  "Value": "liveblogger"
                },
                {
                  "Key": "demorole",
                  "Value": "isThisANewSlide"
                }
              ]
            },
            "DependsOn": [
              "IsThisANewSlideLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "IsThisANewSlideLambdaVersionSFd2Baz7sLh1p6uwQk3yZXuNQieLXz0eA5mmP5o": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "IsThisANewSlideLambdaFunction"
              },
              "CodeSha256": "S+Fd2Baz7sLh1p6uwQk3yZXuN/+Q/ieLXz0eA5mmP5o="
            }
          },
          "PullSlideDataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/mattw-reinvent2017-liveblogger/dev/1511980245402-2017-11-29T18:30:45.402Z/mattw-reinvent2017-liveblogger.zip"
              },
              "FunctionName": "mattw-reinvent2017-liveblogger-dev-pullSlideData",
              "Handler": "handler.pullSlideData",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs6.10",
              "Timeout": 6,
              "Tags": [
                {
                  "Key": "demo",
                  "Value": "liveblogger"
                },
                {
                  "Key": "demorole",
                  "Value": "pullSlideData"
                }
              ]
            },
            "DependsOn": [
              "PullSlideDataLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PullSlideDataLambdaVersionSFd2Baz7sLh1p6uwQk3yZXuNQieLXz0eA5mmP5o": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PullSlideDataLambdaFunction"
              },
              "CodeSha256": "S+Fd2Baz7sLh1p6uwQk3yZXuN/+Q/ieLXz0eA5mmP5o="
            }
          },
          "CreateDocumentLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/mattw-reinvent2017-liveblogger/dev/1511980245402-2017-11-29T18:30:45.402Z/mattw-reinvent2017-liveblogger.zip"
              },
              "FunctionName": "mattw-reinvent2017-liveblogger-dev-createDocument",
              "Handler": "handler.createDocument",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs6.10",
              "Timeout": 6,
              "Tags": [
                {
                  "Key": "demo",
                  "Value": "liveblogger"
                },
                {
                  "Key": "demorole",
                  "Value": "createDocument"
                }
              ]
            },
            "DependsOn": [
              "CreateDocumentLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "CreateDocumentLambdaVersionSFd2Baz7sLh1p6uwQk3yZXuNQieLXz0eA5mmP5o": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateDocumentLambdaFunction"
              },
              "CodeSha256": "S+Fd2Baz7sLh1p6uwQk3yZXuN/+Q/ieLXz0eA5mmP5o="
            }
          },
          "IamRoleStateMachineExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "states.us-east-1.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "dev-us-east-1-mattw-reinvent2017-liveblogger-statemachine",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "lambda:InvokeFunction"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "LiveBloggerStateMachine": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
              "DefinitionString": "{\"StartAt\":\"whichSlide\",\"States\":{\"whichSlide\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:mattw-reinvent2017-liveblogger-dev-whichSlide\",\"Next\":\"isThisANewSlide\"},\"isThisANewSlide\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:mattw-reinvent2017-liveblogger-dev-isThisANewSlide\",\"Next\":\"pullSlideData\"},\"pullSlideData\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:mattw-reinvent2017-liveblogger-dev-pullSlideData\",\"Next\":\"updateSiteOrNot\"},\"updateSiteOrNot\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.updateSite\",\"BooleanEquals\":true,\"Next\":\"createDocument\"},{\"Variable\":\"$.updateSite\",\"BooleanEquals\":false,\"Next\":\"completeSF\"}]},\"createDocument\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:mattw-reinvent2017-liveblogger-dev-createDocument\",\"Next\":\"buildSite\"},\"buildSite\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:mattw-reinvent2017-build-website-dev-buildSite\",\"Next\":\"waitForBuild\"},\"waitForBuild\":{\"Type\":\"Wait\",\"Seconds\":10,\"Next\":\"isItBuilt\"},\"isItBuilt\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:mattw-reinvent2017-build-website-dev-isItBuilt\",\"Next\":\"builtOrNot\"},\"builtOrNot\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.buildDone\",\"BooleanEquals\":true,\"Next\":\"completeSF\"},{\"Variable\":\"$.buildDone\",\"BooleanEquals\":false,\"Next\":\"waitForBuild\"}]},\"completeSF\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:mattw-reinvent2017-build-website-dev-done\",\"End\":true}}}",
              "RoleArn": {
                "Fn::GetAtt": [
                  "IamRoleStateMachineExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": "IamRoleStateMachineExecution"
          },
          "S3BucketMattwreinvent17livebloggersrc": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "mattw-reinvent17-liveblogger-src",
              "NotificationConfiguration": {
                "LambdaConfigurations": [
                  {
                    "Event": "s3:ObjectCreated:*",
                    "Function": {
                      "Fn::GetAtt": [
                        "StartStepFunctionLambdaFunction",
                        "Arn"
                      ]
                    }
                  }
                ]
              }
            },
            "DependsOn": [
              "StartStepFunctionLambdaPermissionMattwreinvent17livebloggersrcS3"
            ]
          },
          "StartStepFunctionLambdaPermissionMattwreinvent17livebloggersrcS3": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "StartStepFunctionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "s3.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::mattw-reinvent17-liveblogger-src"
                  ]
                ]
              }
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-mattw-reinvent2017-liveblogger"
            }
          },
          "ApiGatewayResourceUpload": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "upload",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUploadOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUpload"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUploadPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUpload"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UploadToS3LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1511980245457": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodUploadPut"
            ]
          },
          "UploadToS3LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UploadToS3LambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "UploadToS3LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UploadToS3LambdaVersionSFd2Baz7sLh1p6uwQk3yZXuNQieLXz0eA5mmP5o"
            }
          },
          "StartStepFunctionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "StartStepFunctionLambdaVersionSFd2Baz7sLh1p6uwQk3yZXuNQieLXz0eA5mmP5o"
            }
          },
          "WhichSlideLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WhichSlideLambdaVersionSFd2Baz7sLh1p6uwQk3yZXuNQieLXz0eA5mmP5o"
            }
          },
          "IsThisANewSlideLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "IsThisANewSlideLambdaVersionSFd2Baz7sLh1p6uwQk3yZXuNQieLXz0eA5mmP5o"
            }
          },
          "PullSlideDataLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PullSlideDataLambdaVersionSFd2Baz7sLh1p6uwQk3yZXuNQieLXz0eA5mmP5o"
            }
          },
          "CreateDocumentLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateDocumentLambdaVersionSFd2Baz7sLh1p6uwQk3yZXuNQieLXz0eA5mmP5o"
            }
          },
          "LiveBloggerStateMachineArn": {
            "Description": "Current StateMachine Arn",
            "Value": {
              "Ref": "LiveBloggerStateMachine"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.us-east-1.amazonaws.com/dev"
                ]
              ]
            }
          },
          "LiveBloggerStateMachine": {
            "Description": "The ARN of the example state machine",
            "Value": {
              "Ref": "LiveBloggerStateMachine"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-webpack",
      "serverless-pseudo-parameters",
      "serverless-step-functions"
    ],
    "functions": {
      "uploadToS3": {
        "handler": "handler.uploadToS3",
        "tags": {
          "demo": "liveblogger",
          "demorole": "uploadToS3"
        },
        "events": [
          {
            "http": {
              "path": "upload",
              "method": "put",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PUT"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "environment": {
          "s3srcbucket": "mattw-reinvent17-liveblogger-src"
        },
        "name": "mattw-reinvent2017-liveblogger-dev-uploadToS3",
        "package": {
          "artifact": ".serverless/mattw-reinvent2017-liveblogger.zip"
        },
        "vpc": {}
      },
      "startStepFunction": {
        "handler": "handler.startStepFunction",
        "tags": {
          "demo": "liveblogger",
          "demorole": "startStepFunction"
        },
        "events": [
          {
            "s3": {
              "bucket": "mattw-reinvent17-liveblogger-src",
              "event": "s3:ObjectCreated:*"
            }
          }
        ],
        "environment": {
          "statemachine_arn": {
            "Ref": "LiveBloggerStateMachine"
          }
        },
        "name": "mattw-reinvent2017-liveblogger-dev-startStepFunction",
        "package": {
          "artifact": ".serverless/mattw-reinvent2017-liveblogger.zip"
        },
        "vpc": {}
      },
      "whichSlide": {
        "handler": "handler.whichSlide",
        "tags": {
          "demo": "liveblogger",
          "demorole": "whichSlide"
        },
        "events": [],
        "name": "mattw-reinvent2017-liveblogger-dev-whichSlide",
        "package": {
          "artifact": ".serverless/mattw-reinvent2017-liveblogger.zip"
        },
        "vpc": {}
      },
      "isThisANewSlide": {
        "handler": "handler.isThisANewSlide",
        "tags": {
          "demo": "liveblogger",
          "demorole": "isThisANewSlide"
        },
        "events": [],
        "name": "mattw-reinvent2017-liveblogger-dev-isThisANewSlide",
        "package": {
          "artifact": ".serverless/mattw-reinvent2017-liveblogger.zip"
        },
        "vpc": {}
      },
      "pullSlideData": {
        "handler": "handler.pullSlideData",
        "tags": {
          "demo": "liveblogger",
          "demorole": "pullSlideData"
        },
        "events": [],
        "name": "mattw-reinvent2017-liveblogger-dev-pullSlideData",
        "package": {
          "artifact": ".serverless/mattw-reinvent2017-liveblogger.zip"
        },
        "vpc": {}
      },
      "createDocument": {
        "handler": "handler.createDocument",
        "tags": {
          "demo": "liveblogger",
          "demorole": "createDocument"
        },
        "events": [],
        "name": "mattw-reinvent2017-liveblogger-dev-createDocument",
        "package": {
          "artifact": ".serverless/mattw-reinvent2017-liveblogger.zip"
        },
        "vpc": {}
      }
    },
    "resources": {
      "Outputs": {
        "LiveBloggerStateMachine": {
          "Description": "The ARN of the example state machine",
          "Value": {
            "Ref": "LiveBloggerStateMachine"
          }
        }
      },
      "Resources": {}
    },
    "stepFunctions": {
      "stateMachines": {
        "LiveBloggerStateMachine": {
          "name": "liveBloggerStateMachine",
          "definition": {
            "StartAt": "whichSlide",
            "States": {
              "whichSlide": {
                "Type": "Task",
                "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:mattw-reinvent2017-liveblogger-dev-whichSlide",
                "Next": "isThisANewSlide"
              },
              "isThisANewSlide": {
                "Type": "Task",
                "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:mattw-reinvent2017-liveblogger-dev-isThisANewSlide",
                "Next": "pullSlideData"
              },
              "pullSlideData": {
                "Type": "Task",
                "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:mattw-reinvent2017-liveblogger-dev-pullSlideData",
                "Next": "updateSiteOrNot"
              },
              "updateSiteOrNot": {
                "Type": "Choice",
                "Choices": [
                  {
                    "Variable": "$.updateSite",
                    "BooleanEquals": true,
                    "Next": "createDocument"
                  },
                  {
                    "Variable": "$.updateSite",
                    "BooleanEquals": false,
                    "Next": "completeSF"
                  }
                ]
              },
              "createDocument": {
                "Type": "Task",
                "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:mattw-reinvent2017-liveblogger-dev-createDocument",
                "Next": "buildSite"
              },
              "buildSite": {
                "Type": "Task",
                "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:mattw-reinvent2017-build-website-dev-buildSite",
                "Next": "waitForBuild"
              },
              "waitForBuild": {
                "Type": "Wait",
                "Seconds": 10,
                "Next": "isItBuilt"
              },
              "isItBuilt": {
                "Type": "Task",
                "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:mattw-reinvent2017-build-website-dev-isItBuilt",
                "Next": "builtOrNot"
              },
              "builtOrNot": {
                "Type": "Choice",
                "Choices": [
                  {
                    "Variable": "$.buildDone",
                    "BooleanEquals": true,
                    "Next": "completeSF"
                  },
                  {
                    "Variable": "$.buildDone",
                    "BooleanEquals": false,
                    "Next": "waitForBuild"
                  }
                ]
              },
              "completeSF": {
                "Type": "Task",
                "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:mattw-reinvent2017-build-website-dev-done",
                "End": true
              }
            }
          }
        }
      },
      "activities": []
    }
  },
  "package": {
    "artifactDirectoryName": "serverless/mattw-reinvent2017-liveblogger/dev/1511980245402-2017-11-29T18:30:45.402Z",
    "artifact": ""
  }
}